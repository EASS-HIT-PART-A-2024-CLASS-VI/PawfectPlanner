version: '3.9'

services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"

  gemini-service:
    build:
      context: ./backend
      dockerfile: gemini_service/Dockerfile
    env_file:
      - .env
    volumes:
      - ./backend/gemini_service:/app/gemini_service
    depends_on:
      - backend
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - backend
      - gemini-service
    ports:
      - "3000:80"
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
